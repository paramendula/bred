Token Array [313/316]:

 Macro Comment 

 Id[import] Id[cstd].Id[stddef].*; 
 Id[import] Id[cstd].*; 

 Id[alias] Id[String] = Id[char]*; 

 Id[mod] Id[something] { 

    Id[proc] Id[print](Id[text]: Id[char]*) -> () { 
        Id[stdio]::Id[fputs](Id[char], Id[stdio]::Id[stdin]);
    } 

    Id[mod] Id[override] { 

        Id[proc] Id[printline](Id[number]: Id[int]) { 
            Id[stdio]::Id[printf](Str[%d], Id[number]);
        }

        Id[proc] Id[printline]() { 
            Id[stdio]::Id[putchar](Char[n]);
        } 
        
        Id[proc] Id[printline](Id[text]: Id[string]) { 
            Id[something]::Id[print](Id[text]); 
            Comment 
            Id[printline];
        }

    } 
    
    Id[mod] Id[generic] { 

        Id[struct] Id[Pair] Id[T]> { 
            Id[one]: Id[T],
            Id[two]: Id[T],
        };

    } 

    Id[proc] Id[test]() { 
        Id[let] Id[intpair]: Id[generic]::Id[Pair]<Id[int]> = 
            Id[generic]::Id[Pair]<Id[int]> { 
                                                Id[one]: Int[4], 
                                                Id[two]: Int[23],
                                            };

        Id[override]::Id[printline](Id[intpair].Id[one]); 
        Id[use] Id[override]; 

        Id[printline](Str[I am a digger.]);
    }

} 
    
Id[proc] Id[main](Id[argc]: Id[int], Id[argv]: Id[char]**)-> Id[int] { 
    Id[let] Id[buffer]: Id[char][Int[256]]= { Int[0] }; 

    Id[let] Id[hbuffer]: Id[char]* = Id[stdlib]::Id[malloc](Comment Id[sizeof] Id[buffer]);

    Id[let] Id[random_char]: Id[char]= Char[n]; 
    
    Id[let] Id[lol]: Id[double]= Float[0.127];

    Id[if](Id[hbuffer] == Id[cstd]::Id[NULL]) { 
        Id[stdio]::Id[puts]( Str[Unable to allocate hbuffer(256).]); 
        Id[return] Int[0];
    } 

    Macro 

    Id[stdio]::Id[fputs](Str[Please, enter anything: ], Id[stdio]::Id[stdin]); 
    
    Id[stdio]::Id[gets] Id[buffer]; 
    Id[string]::Id[memcpy](Id[hbuffer], Id[buffer], Comment Id[sizeof](Id[buffer])); 

    Id[stdio]::Id[printf](Str[You entered: %sn], Id[hbuffer]); 
    
    Comment 

    Id[return] Int[0];
}
